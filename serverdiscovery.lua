---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hezhaoming.
--- DateTime: 2021/1/5 9:26 上午
------  服务注册发现，优先支持  zk 、eureka、simple、 nacos
local cjson = require "cjson"
local pluginName = "micro-service-bridge"
-- kong 管理工具类
local kongAdminOperation = require "kong.plugins.micro-service-bridge.admin.kongadminoperation"
local EurekaServiceDiscovery = require "kong.plugins.micro-service-bridge.eureka.eurekaservicediscovery"
local ZookeeperServiceDiscovery = require "kong.plugins.micro-service-bridge.zookeeper.zookeeperservicediscovery"
local SimpleServiceDiscovery = require "kong.plugins.micro-service-bridge.simple.simpleservicediscovery"

local bridge_plugin = {}
local ServerDiscovery = {}
ServerDiscovery__index = ServerDiscovery
-- 创建定时任务
local function createTimeTask(interval, job)
    local ok, err = ngx.timer.every(interval, job)
    if not ok then
        LOG_ERROR("failed to create the timer: ", err)
        return
    end
end

-- 服务发现启动
function ServerDiscovery.starting()
    print(" 进入ServerDiscovery......" .. ngx.worker.id())
    -- 根据插件配置 可以启动 四种自动注册方式
    if 0 ~= ngx.worker.id() then
        return
    end
    -- 拉取当前插件
    bridge_plugin = kongAdminOperation.getCurrentPlugin(pluginName)
    -- 如果插件存在，且开启状态才能处理
    if bridge_plugin and bridge_plugin["enabled"] then
        local conf = bridge_plugin["config"]
        print("\n" .. pluginName .. "插件您的配置参数是......" .. cjson.encode(conf))
        --遍历配置文件
        --[[
        -- 统一配置数据结构
        -- {
        -- "serviceList":[{"url":["","",""],"tag":"bbc","exclude":["","",""]}],
        -- "syncInterval":"10",
        -- "cleanTargetInterval":"80"
        -- }
        --
        --]]
        -- 如果是 eureka  走 eureka的 定时拉取摘除任务
        if conf.eurekaJSON then
            local eurekaConf = cjson.decode(conf.eurekaJSON)
            print("\n" .. "走注册中心：eurekaList--->>>：" .. cjson.encode(eurekaConf))
            -- eureka注册中心启动定时任务
            createTimeTask(eurekaConf.syncInterval, EurekaServiceDiscovery.sync_list_job)
            -- eureka注册中心定时摘除 不健康的服务实例
            createTimeTask(eurekaConf.cleanTargetInterval, EurekaServiceDiscovery.cleanup_list_targets)
        end
        -- 如果是zk 走zk的定时拉取 摘除任务
        if conf.zookeeperJSON then
            local zkConf = cjson.decode(conf.zookeeperJSON)
            print("\n" .. "走注册中心：zkList--->>>：" .. cjson.encode(zkConf))
            -- zk注册中心启动定时任务
            createTimeTask(zkConf.syncInterval, ZookeeperServiceDiscovery.sync_list_job)
            -- zk注册中心定时摘除 不健康的服务实例
            createTimeTask(zkConf.cleanTargetInterval, ZookeeperServiceDiscovery.cleanup_list_targets)
        end
        -- 单体项目  如果是 simple 走 simple 定时拉取摘除任务
        if conf.simpleJSON then
            local simpleConf = cjson.decode(conf.simpleJSON)
            -- simple注册中心启动定时任务
            createTimeTask(simpleConf.syncInterval, SimpleServiceDiscovery.sync_list_job)
            -- simple注册中心定时摘除 不健康的服务实例
            createTimeTask(simpleConf.cleanTargetInterval, SimpleServiceDiscovery.cleanup_list_targets)
        end
    end
end

return ServerDiscovery



